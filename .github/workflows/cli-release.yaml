name: Reliably CLI Release

on:
  push:
    tags:
      - "*.*.*"

jobs:
  checks:
    uses: ./.github/workflows/cli-check.yaml
  publish-wheels:
    name: Publish wheels
    runs-on: ubuntu-22.04
    needs:
      - checks
    steps:
      - uses: actions/checkout@v3
      - name: Set up PDM
        uses: pdm-project/setup-pdm@v3
        with:
          python-version: "3.10"
      - name: Publish wheels
        run: |
          pdm publish

          # try to give Pypi time to update its index. Unfortunate.
          sleep 30s
        env:
          PDM_PUBLISH_USERNAME: __token__
          PDM_PUBLISH_PASSWORD: ${{ secrets.PYPI_TOKEN }}

  build-binary:
    name: Build executable for '${{ matrix.target }}' on '${{ matrix.os }}'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: ubuntu-22.04
          target: x86_64-unknown-linux-gnu
        - os: windows-2022
          target: x86_64-pc-windows-msvc
        - os: macos-10.15
          target: x86_64-apple-darwin
        - os: macos-12
          target: aarch64-apple-darwin
    needs:
      - publish-wheels

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up PDM
        uses: pdm-project/setup-pdm@v3
        with:
          python-version: "3.10"
          cache: true

      - name: Build Linux binaries
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          rustup target add ${{ matrix.target }}

          pdm config python.use_venv true
          pdm sync -G bin-builder -G chaostoolkit
          pdm run pyoxidizer build --release --target-triple ${{ matrix.target }}
          mkdir -p dist/bin/reliably-cli
          cp -r build/**/release/install/* dist/bin/reliably-cli
          tar -C ./dist/bin -czvf reliably_${{ matrix.target }}.tar.gz . --transform='s,^\./,,'

      - name: Build MacOSX binaries
        if: runner.os == 'macOS'
        run: |
          rustup target add ${{ matrix.target }}

          if [ "${{ matrix.target.triple }}" = "aarch64-apple-darwin" ]; then
            export MACOSX_DEPLOYMENT_TARGET=11.0
          elif [ "${{ matrix.target.triple }}" = "x86_64-apple-darwin" ]; then
            export MACOSX_DEPLOYMENT_TARGET=10.9
          fi

          pdm config python.use_venv true
          pdm sync -G bin-builder
          pdm run pyoxidizer build --release --target-triple ${{ matrix.target }}
          mkdir -p dist/bin/reliably-cli
          cp -r build/**/release/install/* dist/bin/reliably-cli
          tar -C ./dist/bin -czvf reliably_${{ matrix.target }}.tar.gz .

      - name: Build Windows installer binaries
        if: runner.os == 'Windows'
        run: |
          pdm config python.use_venv true
          pdm sync -G bin-builder -G chaostoolkit
          pdm run pyoxidizer build --release --target-triple ${{ matrix.target }}
          md dist\bin\reliably-cli
          echo F | xcopy build\${{ matrix.target }}\release\install\* dist\bin\reliably-cli
          dir dist\bin\reliably-cli
          7z a -tzip reliably_${{ matrix.target }}.zip dist\bin\reliably-cli

      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          path: reliably_*
          if-no-files-found: error

  build-container:
    name: Build containers
    runs-on: ubuntu-22.04
    needs:
      - publish-wheels
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Container
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64
          file: ./Dockerfile
          tags: |
            ghcr.io/reliablyhq/cli/cli:latest
