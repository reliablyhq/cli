name: Reliably CLI Release

on:
  push:
    tags:
      - "*.*.*"
  release:
    types: [published]

jobs:
  checks:
    uses: ./.github/workflows/cli-check.yaml
  publish-wheels:
    name: Publish wheels
    runs-on: ubuntu-22.04
    needs:
      - checks
    steps:
      - uses: actions/checkout@v3
      - name: Set up PDM
        uses: pdm-project/setup-pdm@v3
        with:
          python-version: "3.10"
      - name: Publish wheels
        run: |
          pdm publish

          # try to give Pypi time to update its index. Unfortunate.
          sleep 30s
        env:
          PDM_PUBLISH_USERNAME: __token__
          PDM_PUBLISH_PASSWORD: ${{ secrets.PYPI_TOKEN }}

  build-linux-binary:
    name: Build executable for '${{ matrix.target }}' on '${{ matrix.os }}'
    runs-on: ${{ matrix.os }}
    needs:
      - publish-wheels
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: ubuntu-22.04
          target: x86_64-unknown-linux-gnu

    steps:
      - uses: actions/checkout@v3

      - name: Set up PDM
        uses: pdm-project/setup-pdm@v3
        with:
          python-version: "3.10"
          cache: false

      - name: Build Linux binaries
        run: |
          sudo apt update
          rustup target add ${{ matrix.target }}

          pdm config python.use_venv true
          pdm sync -G bin-builder -G chaostoolkit
          pdm export -f requirements --prod -G chaostoolkit -o requirements-generated.txt
          RELIABLY_VERSION=$(pdm show reliably-cli --version)
          pdm run pyoxidizer build --var RELIABLY_VERSION "${RELIABLY_VERSION}" --release --target-triple ${{ matrix.target }}
          mkdir -p dist/bin/reliably-cli
          cp -r build/**/release/install/* dist/bin/reliably-cli
          tar -C ./dist/bin -czvf reliably_${{ matrix.target }}.tar.gz . --transform='s,^\./,,'

      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: linux binary (${{ matrix.target }})
          path: reliably_${{ matrix.target }}.tar.gz
          if-no-files-found: error
          retention-days: 5

      - name: Add to release
        uses: softprops/action-gh-release@v1
        if: ${{ github.event.release && github.event.action == 'published' }}
        with:
          files: reliably_${{ matrix.target }}.tar.gz
  
  build-macosx-x86_64-binary:
    name: Build executable for '${{ matrix.target }}' on '${{ matrix.os }}'
    runs-on: ${{ matrix.os }}
    needs:
      - publish-wheels
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: macos-12
          target: x86_64-apple-darwin

    steps:
      - uses: actions/checkout@v3

      - name: Set up PDM
        uses: pdm-project/setup-pdm@v3
        with:
          python-version: "3.10"
          cache: false

      - name: Build MacOSX binaries
        run: |
          rustup target add ${{ matrix.target }}

          pdm config python.use_venv true
          pdm sync -G bin-builder
          pdm export -f requirements --prod -G chaostoolkit -o requirements-generated.txt
          RELIABLY_VERSION=$(pdm show reliably-cli --version)
          pdm run pyoxidizer build macos --var RELIABLY_VERSION "${RELIABLY_VERSION}" --release --target-triple ${{ matrix.target }}
          mkdir -p dist/bin/reliably-cli
          cp -r build/**/release/install/* dist/bin/reliably-cli
          tar -C ./dist/bin -czvf reliably_${{ matrix.target }}.tar.gz .

      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: macosx binary (${{ matrix.target }})
          path: reliably_${{ matrix.target }}.tar.gz
          if-no-files-found: error
          retention-days: 5
  
      - name: Add to release
        uses: softprops/action-gh-release@v1
        if: ${{ github.event.release && github.event.action == 'published' }}
        with:
          files: reliably_${{ matrix.target }}.tar.gz
  
  # build-macosx-aarch64-binary:
  #   name: Build executable for '${{ matrix.target }}' on '${{ matrix.os }}'
  #   runs-on: ${{ matrix.os }}
  #   needs:
  #     - publish-wheels
  #   strategy:
  #     fail-fast: false
  #     matrix:
  #       include:
  #       - os: macos-12
  #         target: aarch64-apple-darwin

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Set up PDM
  #       uses: pdm-project/setup-pdm@v3
  #       with:
  #         python-version: "3.10"
  #         cache: false

  #     - name: Build MacOSX binaries
  #       run: |
  #         rustup target add ${{ matrix.target }}

  #         pdm config python.use_venv true
  #         pdm sync -G bin-builder
  #         pdm export -f requirements --prod -G chaostoolkit -o requirements-generated.txt
  #         pdm run pyoxidizer build --release --target-triple ${{ matrix.target }}
  #         mkdir -p dist/bin/reliably-cli
  #         cp -r build/**/release/install/* dist/bin/reliably-cli
  #         tar -C ./dist/bin -czvf reliably_${{ matrix.target }}.tar.gz .

  #     - name: Upload binary
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: macosx binary (${{ matrix.target }})
  #         path: reliably_${{ matrix.target }}.tar.gz
  #         if-no-files-found: error

  build-windows-binary:
    name: Build executable for '${{ matrix.target }}' on '${{ matrix.os }}'
    runs-on: windows-latest-8-cores
    needs:
      - publish-wheels
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: windows-2022
          target: x86_64-pc-windows-msvc

    steps:
      - uses: actions/checkout@v3

      - name: Set up PDM
        uses: pdm-project/setup-pdm@v3
        with:
          python-version: "3.10"
          cache: false

      - name: Build Windows installer binaries
        run: |
          pdm config python.use_venv true
          pdm sync -G bin-builder -G chaostoolkit
          pdm export -f requirements --prod -G chaostoolkit -o requirements-generated.txt
          set RELIABLY_VERSION=
          for /f "delims=" %%a in ('pdm show reliably-cli --version') do @set RELIABLY_VERSION=%%a
          pdm run pyoxidizer build msi --var RELIABLY_VERSION "${RELIABLY_VERSION}" --release --target-triple ${{ matrix.target }}
          md .\dist\bin\reliably-cli
          xcopy .\build\${{ matrix.target }}\release\install\msi\* .\dist /s /e /k /i /y
          dir .\dist

      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: windows binary (${{ matrix.target }})
          path: dist/
          if-no-files-found: error
          retention-days: 5

      - name: Create zip
        if: ${{ github.event.release && github.event.action == 'published' }}
        run: 7z a -r reliably-${{ matrix.target }}.zip "dist/"

      - name: Add to release
        uses: softprops/action-gh-release@v1
        if: ${{ github.event.release && github.event.action == 'published' }}
        with:
          files: reliably-${{ matrix.target }}.zip
  
  build-container:
    name: Build containers
    runs-on: ubuntu-22.04
    needs:
      - publish-wheels
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Container
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64
          file: ./Dockerfile
          tags: |
            ghcr.io/reliablyhq/cli/cli:latest

  release:
    runs-on: ubuntu-22.04
    permissions:
      contents: write
    needs:
      - build-linux-binary
      - build-windows-binary
      - build-macosx-x86_64-binary
    steps:
    - uses: actions/checkout@v3
    - uses: softprops/action-gh-release@v1
      with:
        files: |
          reliably_x86_64-pc-windows-msvc.zip
          reliably_x86_64-apple-darwin.tar.gz
          reliably_x86_64-unknown-linux-gnu.tar.gz
