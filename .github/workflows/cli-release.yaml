name: Reliably CLI Release

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"

jobs:
  checks:
    uses: ./.github/workflows/cli-check.yaml
  build-container:
    name: Build containers
    runs-on: ubuntu-22.04
    needs:
      - checks
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Container
        uses: docker/build-push-action@v3
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64, linux/arm64
          file: ./Dockerfile
          tags: |
            ghcr.io/reliablyhq/cli:latest
  build-wheels:
    name: Build wheels
    runs-on: ubuntu-22.04
    needs:
      - checks
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up PDM
        uses: pdm-project/setup-pdm@v3
        with:
          python-version: "3.10"
      - name: Build wheel
        run: |
          pdm build --no-sdist
      - name: Publish wheels
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          pdm publish
        env:
          PDM_PUBLISH_USERNAME: __token__
          PDM_PUBLISH_PASSWORD: ${{ secrets.PYPI_TOKEN }}

  build-binary:
    name: Build standalone executable for ${{ matrix.target == 'aarch64-apple-darwin' && 'macOS M1' || startsWith(matrix.os, 'macos-') && 'macOS Intel' || startsWith(matrix.os, 'windows-') && 'Windows' || 'Linux' }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: ubuntu-22.04
          target: x86_64-unknown-linux-musl
    needs:
      - checks
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up PDM
        uses: pdm-project/setup-pdm@v3
        with:
          python-version: "3.10"
          cache: true
      - if: matrix.target == 'x86_64-unknown-linux-musl'
        name: Install musl
        run: |
          sudo apt update
          sudo apt install -y --no-install-recommends musl-tools

      - name: Build binary
        shell: bash
        run: |
          pdm export -o requirements.txt --without-hashes --prod
          pdm config python.use_venv true

          pdm sync
          pdm sync -G bin-builder

          pdm info
          pythonpath=$(pdm info --python)
          bindir=$(dirname $pythonpath)

          echo $bindir
          ls $bindir

          $bindir/pyoxidizer build --release --var-env flavor standalone_static --target-triple ${{ matrix.target }}
          cp build/**/release/install/reliably reliably-${{ matrix.target }}
      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          name: reliably-${{ matrix.target }}
          path: reliably-${{ matrix.target }}
