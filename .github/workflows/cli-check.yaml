name: Reliably CLI Lint/Test

on:
  push:
    branches:
      - main

  workflow_call:

jobs:
  checks:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: ["3.10", "3.11"]
        os: ["windows-latest", "ubuntu-latest", "macos-latest"]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up PDM
        uses: pdm-project/setup-pdm@v3
        with:
          python-version: ${{ matrix.python-version }}
          cache: true

      - name: Ensure lock file is up to date
        run: |
          pdm lock --check

      - name: Install dependencies
        run: |
          pdm sync -d

      - name: Run Lint
        run: |
          pdm run lint

      - name: Run Tests
        run: |
          pdm run pytest
 
  build-binary:
    name: Build executable for '${{ matrix.target }}' on '${{ matrix.os }}'
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: ubuntu-22.04
          target: x86_64-unknown-linux-gnu

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up PDM
        uses: pdm-project/setup-pdm@v3
        with:
          python-version: "3.10"
          cache: true

      - name: Build Linux binaries
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          rustup target add ${{ matrix.target }}

          pdm config python.use_venv true
          pdm sync -G bin-builder -G chaostoolkit
          pdm run pyoxidizer build --release --target-triple ${{ matrix.target }}
          mkdir -p dist/bin/reliably_${{ matrix.target }}
          cp -r build/**/release/install/* dist/bin/reliably_${{ matrix.target }}
          tar -C ./dist/bin -czvf reliably_${{ matrix.target }}.tar.gz . --transform='s,^\./,,'

      - name: Upload binary
        uses: actions/upload-artifact@v3
        with:
          path: reliably_*
          if-no-files-found: error